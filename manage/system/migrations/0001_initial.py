# Generated by Django 4.1.7 on 2023-03-27 20:02

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import system.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='Уникальный идентификатор документа')),
                ('doc_name', models.TextField(verbose_name='Название документа')),
                ('description', models.TextField(verbose_name='Описание документа')),
                ('document_language', models.IntegerField(validators=[system.models.document_language_validator], verbose_name='Язык докуменат')),
            ],
            options={
                'verbose_name': 'Информация о документе',
                'verbose_name_plural': 'Информация о документе',
                'db_table': 'documents',
            },
        ),
        migrations.CreateModel(
            name='Entities',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='Уникальный идентификатор сущности')),
                ('ent_name', models.TextField(verbose_name='Имя сущности')),
                ('description', models.TextField(verbose_name='Описание сущности')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='system.entities', verbose_name='Родитель сущности')),
            ],
            options={
                'verbose_name': 'Сущности',
                'verbose_name_plural': 'Сущности',
                'db_table': 'entities',
            },
        ),
        migrations.CreateModel(
            name='Rights',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='Идентификатор прав')),
                ('rights_description', models.TextField(verbose_name='Описание права доступа')),
            ],
            options={
                'verbose_name': 'Права доступа',
                'verbose_name_plural': 'Права доступа',
                'db_table': 'rights',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='Уникальный идентификатор тэга')),
                ('tag', models.CharField(max_length=20, unique=True, verbose_name='Тэг')),
            ],
            options={
                'verbose_name': 'Тэги',
                'verbose_name_plural': 'Тэги',
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='Уникальный идентификатор пользователя')),
                ('user_name', models.CharField(max_length=30, unique=True, verbose_name='Имя пользователя')),
                ('user_password', models.CharField(max_length=16, verbose_name='Пароль')),
                ('password_hash', models.CharField(max_length=100, verbose_name='Хэш пароля')),
            ],
            options={
                'verbose_name': 'Пользователи',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='User_groups',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='Уникальный идентификатор группы пользователя')),
                ('group_name', models.TextField(verbose_name='Наименование группы пользователя')),
                ('group_rights', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.rights', validators=[system.models.group_rights_validator], verbose_name='Права для группы пользователя')),
            ],
            options={
                'verbose_name': 'Группы пользователей',
                'verbose_name_plural': 'Группы пользователей',
                'db_table': 'user_groups',
            },
        ),
        migrations.CreateModel(
            name='Tag_Relation',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='Уникальный идентификатор отношения тега')),
                ('id_document', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.documents', verbose_name='ID документа')),
                ('id_entity', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.entities', verbose_name='ID сущности')),
                ('id_tag', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.tags', verbose_name='ID тэга')),
            ],
            options={
                'verbose_name': 'Отношение тэгов',
                'verbose_name_plural': 'Отношение тэгов',
                'db_table': 'tags_relations',
            },
        ),
        migrations.CreateModel(
            name='Relations',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='Уникальный идентивикатор отношения')),
                ('id_document', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.documents', verbose_name='Идентификатор документа')),
                ('id_entities', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.entities', verbose_name='Идентификатор сущности')),
            ],
            options={
                'verbose_name': 'Отношения',
                'verbose_name_plural': 'Отношения',
                'db_table': 'relations',
            },
        ),
        migrations.CreateModel(
            name='Group_access',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='Права группы пользователя')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.users', verbose_name='ID пользователя')),
                ('id_user_group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.user_groups', verbose_name='ID группы пользователя')),
            ],
            options={
                'verbose_name': 'Доступ для конкретной группы пользователей',
                'verbose_name_plural': 'Доступ для конкретной группы пользователей',
                'db_table': 'group_access',
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='Уникальный идентификатор файла')),
                ('file_name', models.CharField(max_length=50, unique=True, verbose_name='Имя файла')),
                ('file', models.FileField(upload_to='files/%Y/%m/%d', verbose_name='Файлы')),
                ('file_url', models.URLField(verbose_name='URL файла')),
                ('file_version', models.CharField(max_length=20, verbose_name='Версия файла')),
                ('add_data', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('id_document', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.documents', verbose_name='ID документа')),
            ],
            options={
                'verbose_name': 'Информация о файлах',
                'verbose_name_plural': 'Информация о файлах',
                'db_table': 'files',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='Уникальный идентификатор комментария')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий к документу')),
                ('comment_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления комментария')),
                ('id_document', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.documents', verbose_name='ID документа к которому добавлен комментарий')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.users', verbose_name='ID пользователя, добавившего комментарий')),
            ],
            options={
                'verbose_name': 'Комментарии',
                'verbose_name_plural': 'Комментарии',
                'db_table': 'comments',
            },
        ),
    ]
