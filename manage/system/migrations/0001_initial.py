# Generated by Django 4.1.7 on 2023-04-28 13:55

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='Уникальный идентификатор документа')),
                ('doc_name', models.TextField(verbose_name='Название документа')),
                ('doc_type', models.CharField(max_length=80, verbose_name='Тип документа')),
                ('description', models.TextField(verbose_name='Описание документа')),
                ('document_language', models.CharField(max_length=80, verbose_name='Язык докуменат')),
                ('document', models.FileField(blank=True, null=True, upload_to='docs/', verbose_name='Документ')),
            ],
            options={
                'verbose_name': 'Информация о документе',
                'verbose_name_plural': 'Информация о документе',
                'db_table': 'documents',
            },
        ),
        migrations.CreateModel(
            name='Entities',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='Уникальный идентификатор сущности')),
                ('ent_name', models.TextField(verbose_name='Имя сущности')),
                ('description', models.TextField(verbose_name='Описание сущности')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='system.entities', verbose_name='Родитель сущности')),
            ],
            options={
                'verbose_name': 'Сущности',
                'verbose_name_plural': 'Сущности',
                'db_table': 'entities',
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='Уникальный идентификатор файла')),
                ('file_name', models.CharField(max_length=50, unique=True, verbose_name='Имя файла')),
                ('file', models.FileField(blank=True, null=True, upload_to='files/%Y/%m/%D/', verbose_name='Файлы')),
                ('file_version', models.CharField(max_length=20, verbose_name='Версия файла')),
                ('add_data', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата добавления')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Информация о файлах',
                'verbose_name_plural': 'Информация о файлах',
                'db_table': 'files',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='ID тэга')),
                ('tag', models.CharField(max_length=20, unique=True, verbose_name='Тэг')),
            ],
            options={
                'verbose_name': 'Тэги',
                'verbose_name_plural': 'Тэги',
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Tag_Relation',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='Уникальный идентификатор отношения тега')),
                ('id_document', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.documents', verbose_name='ID документа')),
                ('id_entity', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.entities', verbose_name='ID сущности')),
                ('id_tag', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.tags', verbose_name='ID тэга')),
            ],
            options={
                'verbose_name': 'Отношение тэгов',
                'verbose_name_plural': 'Отношение тэгов',
                'db_table': 'tags_relations',
            },
        ),
        migrations.CreateModel(
            name='RelationsFiles',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='Уникальный идентивикатор отношения')),
                ('id_entities', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.entities', verbose_name='ID категории')),
                ('id_file', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.files', verbose_name='ID файла')),
            ],
            options={
                'verbose_name': 'Отношения сущностей с файлами',
                'verbose_name_plural': 'Отношения сущностей с файлами',
                'db_table': 'relations_files',
            },
        ),
        migrations.CreateModel(
            name='RelationsDocuments',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='Уникальный идентивикатор отношения')),
                ('id_document', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.documents', verbose_name='ID документа')),
                ('id_file', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='system.files', verbose_name='ID файла')),
            ],
            options={
                'verbose_name': 'Привязка документов к файлам',
                'verbose_name_plural': 'Привязка документов к файлам',
                'db_table': 'relations_documents',
            },
        ),
    ]
